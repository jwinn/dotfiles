general {
    #output_format = "dzen2"
    interval = 1
    colors = true
}

order += "ethernet _first_"
#order += "run_watch DHCP"
#order += "run_watch VPNC"
#order += "path_exists VPN"
#order += "wireless _first_"
order += "battery all"
order += "disk /"
order += "cpu_usage"
#order += "cpu_temperature 0"
order += "memory"
order += "load"
order += "tztime utc"
order += "tztime local"
#order += "read_file uptime"

wireless _first_ {
    format_up = "W: (%quality at %essid, %bitrate) %ip"
    format_down = "W: down"
}

ethernet _first_ {
    # if using %speed, cap_net_admin capability is required
    #format_up = "E: %ip (%speed)"
    format_up = "E: %ip"
    format_down = "E: down"
}

battery all {
    format = "%status %percentage %remaining %emptytime"
    format_down = "No battery"
    status_chr = "âš¡ CHR"
    status_bat = "ðŸ”‹ BAT"
    status_unk = "? UNK"
    status_full = "â˜» FULL"
    path = "/sys/class/power_supply/BAT%d/uevent"
    low_threshold = 10
}

run_watch DHCP {
    pidfile = "/var/run/dhclient*.pid"
}

run_watch VPNC {
    # file containing the PID of a vpnc process
    pidfile = "/var/run/vpnc/pid"
}

path_exists VPN {
    # path exists when a VPN tunnel launched by nmcli/nm-applet is active
    path = "/proc/sys/net/ipv4/conf/tun0"
}

tztime local {
    format = "%Y-%m-%d %H:%M:%S"
    #hide_if_equals_localtime = true
}

tztime utc {
    format = "UTC %H:%M"
    timezone = "Etc/UTC"
}

load {
    format = "%5min"
}

cpu_usage {
    format = "%usage"
}

cpu_temperature 0 {
    format = "T: %degrees Â°C"
    path = "/sys/devices/platform/coretemp.0/temp1_input"
}

memory {
    format = "%used"
    threshold_degraded = "10%"
    format_degraded = "MEMORY: %free"
}

disk "/" {
    format = "%avail"
}

read_file uptime {
    path = "/proc/uptime"
}
