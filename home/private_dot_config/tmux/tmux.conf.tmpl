# change leader key to <ctrl>+<space>
unbind C-b
set -g prefix C-Space

# reload the config file with <prefix>+r
unbind r
bind r source-file {{ .xdg.config.home }}/tmux/tmux.conf \; display "Reloaded {{ .xdg.config.home }}/tmux/tmux.conf"

# split horizontal witn <prefix>+h and veritcal <prefix>+v
unbind h
unbind v
unbind '"' # default: split horizontally
unbind % # default: split veritically
bind h split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# use vi-like bindings `hjkl` to navigate panes
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# increase the lines retained in history
set -g history-limit 100000

# create a new window with <prefix>+w
unbind w # default: change current window interactively
bind w new-window -c "#{pane_current_path}"

# rename current window with <prefix>+n
unbind n # default: move to next window
bind n command-prompt "rename-window '%%'"

# navigate windows with <alt>+j for previous and <alt>+k for next
bind -n M-j previous-window
bind -n M-k next-window

# navigate in copy mode with vi bindings
set-window-option -g mode-keys vi

# use vi-like bindings to select and copy selection in copy mode
unbind -T copy-mode-vi Space # default: begin-selection
unbind -T copy-mode-vi Enter # default: copy-selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection # copy to tmux buffer
{{ if eq .chezmoi.os "darwin" -}}
bind -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "pbcopy"
{{- else if eq .chezmoi.os "linux" }}
# TODO: use supported clipboard command, e.g. xsel, clip, wl-keyboard, etc
bind -T copy-mode-vi Y send-keys copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
{{- end }}

# neovim may not change from block to pip when going from normal to insert mode
#set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# smart pane switching with vim split awareness
# https://github.com/christoomey/vim-tmux-navigator
# TODO: may only work on linux
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# TODO: should really check if mouse attached
{{ if .interactive -}}
# enable mouse support
set -g mouse on
{{- end }}
