# shellcheck shell=sh
# Largely based on: https://heptapod.host/flowblok/dotfiles

# https://www.freedesktop.org XDG ENV variable declarations
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
# Note: macOS suggested locations differ from below, but go for consistency
export XDG_CONFIG_DIRS="${XDG_CONFIG_DIRS:-{{ .xdg.config.dirs | quote }}}"
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-{{ .xdg.config.home | quote }}}"
export XDG_DATA_DIRS="${XDG_DATA_DIRS:-{{ .xdg.data.dirs | quote }}}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-{{ .xdg.data.home | quote }}}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-{{ .xdg.cache.home | quote }}}"
{{ if hasKey .xdg.runtime "dir" -}}
export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:-{{ .xdg.runtime.dir | quote }}}"
{{- else -}}
# there are numerous requirements for the runtime dir, allow OS to determine
#export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:-""}"
{{- end }}

# "normalize" for sehll env expectations for the given system
export HOSTNAME="${HOSTNAME:-{{ .os.hostname | quote }}}"
export USER="${USER:-{{ .chezmoi.username | quote }}}"
export NAME="${NAME:-{{ .profile.name | quote }}}"
export SHELL_NAME="${SHELL_NAME:-"${SHELL##*/}"}"
export OSTYPE="${OSTYPE:-{{ .os.id | quote }}}"
export OS_ARCH="${OS_ARCH:-{{ .chezmoi.arch | quote }}}"
export OS_NAME="${OS_NAME:-{{ .os.name | quote }}}"
export OS_PRODUCT_NAME="${OS_PRODUCT_NAME:-{{ .os.id | quote }}}"
export OS_VERSION="${OS_VERSION:-{{ .os.version | quote }}}"

{{ if eq .chezmoi.os "darwin" -}}
export OS_IS_MACOS=1
export SDKROOT="${SDKROOT:-{{ .darwin.sdk.root | quote }}}"
export MACOSX_DEPLOYMENT_TARGET="${MACOSX_DEPLOYMENT_TARGET:-{{ .darwin.deployment.target | quote }}}"
{{- else if eq .chezmoi.os "linux" -}}
export OS_IS_LINUX=1
{{- else if or (eq .chezmoi.os "freebsd") (eq .chezmoi.os "openbsd") -}}
export OS_IS_BSD=1
{{- else if eq .chezmoi.os "windows" -}}
export OS_IS_WINDOWS=1
{{- else -}}
export OS_IS_UNKNOWN=1
{{- end }}

# TBD: https://github.com/asdf-vm/asdf/issues/687
# set asdf config and tool version files path
export ASDF_CONFIG_FILE="${ASDF_CONFIG_FILE:-"${XDG_CONFIG_HOME}/asdf/asdfrc"}"
export ASDF_DATA_DIR="${XDG_DATA_HOME:-"${XDG_DATA_HOME}/asdf"}"

# We need to set $ENV so that if you use shell X as your login shell,
# and then start "sh" as a non-login interactive shell the startup scripts
# will correctly run.
export ENV="{{ .xdg.config.home }}/sh/interactive.sh"

# We also need to set BASH_ENV, which is run for *non-interactive* shells.
# (unlike $ENV, which is for interactive shells)
export BASH_ENV="{{ .xdg.config.home }}/bash/env.bash"

# shellcheck source-path=SCRIPTDIR
. "${XDG_CONFIG_HOME}/shell/functions.sh"

# set PATH so it includes user's private bin if it exists
if [ -d "${HOME}/bin" ] ; then
  path_prepend "${HOME}/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "${HOME}/.local/bin" ] ; then
  path_prepend "${HOME}/.local/bin:${PATH}"
fi

umask 0022

safe_source "${XDG_CONFIG_HOME}/shell/env.local"
